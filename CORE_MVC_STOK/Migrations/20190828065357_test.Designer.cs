// <auto-generated />
using CORE_MVC_STOK.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CORE_MVC_STOK.Migrations
{
    [DbContext(typeof(MasterContext))]
    [Migration("20190828065357_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085");

            modelBuilder.Entity("CORE_MVC_STOK.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName")
                        .IsRequired();

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CORE_MVC_STOK.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<string>("CustomerName")
                        .IsRequired();

                    b.Property<string>("CustomerSurname")
                        .IsRequired();

                    b.HasKey("CustomerId");

                    b.HasIndex("CategoryId")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CORE_MVC_STOK.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<string>("ProductBrand")
                        .IsRequired();

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.Property<decimal>("ProductPrice");

                    b.Property<int>("ProductStock");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CORE_MVC_STOK.Models.Sales", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CustomerId");

                    b.Property<int>("Piece");

                    b.Property<decimal>("Price");

                    b.Property<int>("ProductId");

                    b.HasKey("SaleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("CORE_MVC_STOK.Models.Customer", b =>
                {
                    b.HasOne("CORE_MVC_STOK.Models.Category", "Category")
                        .WithOne("Customer")
                        .HasForeignKey("CORE_MVC_STOK.Models.Customer", "CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CORE_MVC_STOK.Models.Product", b =>
                {
                    b.HasOne("CORE_MVC_STOK.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CORE_MVC_STOK.Models.Sales", b =>
                {
                    b.HasOne("CORE_MVC_STOK.Models.Customer", "Customer")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CORE_MVC_STOK.Models.Product", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
